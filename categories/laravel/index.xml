<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Laravel on Rai Sachin</title>
    <link>https://www.raisachin.com.np/categories/laravel/</link>
    <description>Recent content in Laravel on Rai Sachin</description>
    <image>
      <url>https://www.raisachin.com.np/img/logo.png</url>
      <link>https://www.raisachin.com.np/img/logo.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Â© sachinkiranti 2021</copyright>
    <lastBuildDate>Fri, 22 Apr 2022 20:16:29 +0545</lastBuildDate><atom:link href="https://www.raisachin.com.np/categories/laravel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Recover Lost Laravel Migration Files From an Existing Database</title>
      <link>https://www.raisachin.com.np/posts/how-to-recover-lost-laravel-migration-files-from-an-existing-database/</link>
      <pubDate>Fri, 22 Apr 2022 20:16:29 +0545</pubDate>
      
      <guid>https://www.raisachin.com.np/posts/how-to-recover-lost-laravel-migration-files-from-an-existing-database/</guid>
      <description>While working on one of my client projects, I was shocked to see as there were no migration files in a Laravel project. They provided me the live database to work with and it was somehow okay for now but we all know what migration files do in Laravel. It was itching me and I started researching for generating the migration files by using our existing database. Here comes to the rescue, one of the packages by Bennett Treptow was just what I was looking for.</description>
    </item>
    
    <item>
      <title>Laravel Useful Route Flags and Options</title>
      <link>https://www.raisachin.com.np/posts/laravel-useful-route-flags-and-options/</link>
      <pubDate>Wed, 18 Aug 2021 12:31:17 +0545</pubDate>
      
      <guid>https://www.raisachin.com.np/posts/laravel-useful-route-flags-and-options/</guid>
      <description>Laravel makes adding a new route a piece of cake ðŸ˜Ž. To view all the routes we have been using php artisan route:list and this list becomes quite messy and hard to read as the route keeps growing.
Some of the common options Using path and name options 1 2 3  php artisan route:list --path=&amp;#34;login&amp;#34; php artisan route:list --name=&amp;#34;login&amp;#34;   &amp;ndash;compact flag 1  php artisan route:list --compact   This command shows only Method, URI and Action.</description>
    </item>
    
    <item>
      <title>When And How to Use Database Transactions in Laravel</title>
      <link>https://www.raisachin.com.np/posts/when-how-to-use-database-transactions-in-laravel/</link>
      <pubDate>Wed, 04 Aug 2021 23:15:04 +0545</pubDate>
      
      <guid>https://www.raisachin.com.np/posts/when-how-to-use-database-transactions-in-laravel/</guid>
      <description>Hello Artisan ðŸ˜Ž , Database transactions are often an overlooked feature, but Laravel makes it so effortless.
One of the powerful ways to ensure data integrity is database transactions. Database transactions give a powerful ability to safely perform multiple database queries in a single transaction. If all queries run smoothly, then only it will commit otherwise it will roll back.
For Example, we have an application where we create a user, assign a role to the created user, and add KYC (Know your customer).</description>
    </item>
    
  </channel>
</rss>
