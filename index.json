[{"content":"View the config list 1  composer config --list    Checking common errors to help debug problems 1  composer diagnose    Show the list of outdated packages 1  composer outdated    Show information about installed dependencies 1  composer info   1  composer show   For specific dependencies 1  composer show intervention/image   Dependencies available 1  composer show --all    Navigation Show dependency homepage or repo url 1  composer browser intervention/image --show   Navigate to dependency homepage url 1  composer browser intervention/image --homepage   Navigate to dependency repo url 1  composer browser intervention/image    To be continued \u0026hellip; üòÑ\n","permalink":"https://www.raisachin.com.np/posts/composer-useful-commands/","summary":"View the config list 1  composer config --list    Checking common errors to help debug problems 1  composer diagnose    Show the list of outdated packages 1  composer outdated    Show information about installed dependencies 1  composer info   1  composer show   For specific dependencies 1  composer show intervention/image   Dependencies available 1  composer show --all    Navigation Show dependency homepage or repo url 1  composer browser intervention/image --show   Navigate to dependency homepage url 1  composer browser intervention/image --homepage   Navigate to dependency repo url 1  composer browser intervention/image    To be continued \u0026hellip; üòÑ","title":"ComposerüåôUseful Commands"},{"content":"Laravel makes adding a new route a piece of cake üòé. To view all the routes we have been using php artisan route:list and this list becomes quite messy and hard to read as the route keeps growing.\nSome of the common options Using path and name options 1 2 3  php artisan route:list --path=\u0026#34;login\u0026#34; php artisan route:list --name=\u0026#34;login\u0026#34;   \u0026ndash;compact flag 1  php artisan route:list --compact   This command shows only Method, URI and Action.\nSpecify columns 1  php artisan route:list --columns=Method,URI,Name,Middleware   This options and flags make the route list more readable.\nüç∫ Happy Coding!\n","permalink":"https://www.raisachin.com.np/posts/laravel-useful-route-flags-and-options/","summary":"Laravel makes adding a new route a piece of cake üòé. To view all the routes we have been using php artisan route:list and this list becomes quite messy and hard to read as the route keeps growing.\nSome of the common options Using path and name options 1 2 3  php artisan route:list --path=\u0026#34;login\u0026#34; php artisan route:list --name=\u0026#34;login\u0026#34;   \u0026ndash;compact flag 1  php artisan route:list --compact   This command shows only Method, URI and Action.","title":"Laravel Useful Route Flags and Options"},{"content":"If you\u0026rsquo;re familiar with composer then, you will always find composer.lock in the root source of your project. This file contains the list of installed dependencies of your project.\ncomposer.lock ensures everyone working on your project is running with the same dependencies versions. Now, we get the idea of why commit the composer.lock file to git.\nIt may confuse you that we are already using a specific version in composer.json. Yes, we do, but the dependencies also require other dependencies that are not bound by these constraints.\n composer.lock also contains the hash of the composer.json.\n üí• To get the same set of dependencies, we need to commit composer.lock.\nüç∫ Happy Coding!\n","permalink":"https://www.raisachin.com.np/posts/composer-lock/","summary":"If you\u0026rsquo;re familiar with composer then, you will always find composer.lock in the root source of your project. This file contains the list of installed dependencies of your project.\ncomposer.lock ensures everyone working on your project is running with the same dependencies versions. Now, we get the idea of why commit the composer.lock file to git.\nIt may confuse you that we are already using a specific version in composer.json. Yes, we do, but the dependencies also require other dependencies that are not bound by these constraints.","title":"Composer | composer.lock"},{"content":"Hello Artisan üòé , Database transactions are often an overlooked feature, but Laravel makes it so effortless.\nOne of the powerful ways to ensure data integrity is database transactions. Database transactions give a powerful ability to safely perform multiple database queries in a single transaction. If all queries run smoothly, then only it will commit otherwise it will roll back.\nFor Example, we have an application where we create a user, assign a role to the created user, and add KYC (Know your customer).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  # Creating a User $user = User::create([ // user data ]); # Assigning a Role $user-\u0026gt;assignRole(\u0026#39;customer\u0026#39;); # Creating kyc information for the user Kyc::create([ \u0026#39;user_id\u0026#39; =\u0026gt; $user-\u0026gt;id, // other info ]);   This all looks good. We don\u0026rsquo;t want any user without role and KYC but what if the user is not created. If the user is not created, we cannot assign a role and add KYC. This will cause errors in our system.\nHere comes the Database transactions to the rescue :\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  DB::transaction(function() { # Creating a User \t$user = User::create([ // user data \t]); # Assigning a Role \t$user-\u0026gt;assignRole(\u0026#39;customer\u0026#39;); # Creating kyc information for the user \tKyc::create([ \u0026#39;user_id\u0026#39; =\u0026gt; $user-\u0026gt;id, // other info \t]); });   As Laravel Documentation describes, all we have to do is wrap our database calls within a closure. If an Exception is thrown within the closure, then the transaction will roll back.\nAnd that\u0026rsquo;s it ‚úåÔ∏è We\u0026rsquo;re done!\n","permalink":"https://www.raisachin.com.np/posts/when-how-to-use-database-transactions-in-laravel/","summary":"Hello Artisan üòé , Database transactions are often an overlooked feature, but Laravel makes it so effortless.\nOne of the powerful ways to ensure data integrity is database transactions. Database transactions give a powerful ability to safely perform multiple database queries in a single transaction. If all queries run smoothly, then only it will commit otherwise it will roll back.\nFor Example, we have an application where we create a user, assign a role to the created user, and add KYC (Know your customer).","title":"When And How to Use Database Transactions in Laravel"},{"content":"You got an error. The first thing we do is to check the error logs or reports. The logs or reports make it the developer or any tech guy easy to solve the problems.\nToday we will enable some of the hidden variables which can help us debug the WordPress errors more easily. These variables are mostly enabled only for the development process, not on production websites. Let‚Äôs get to the point now.\nYou need to add the following lines of code in the wp-config.php file in WordPress.\n1 2 3 4 5 6 7  \u0026lt;?php define(\u0026#39;WP_DEBUG\u0026#39;, true); // update false to true define(\u0026#39;WP_DEBUG_LOG\u0026#39;, true); define(\u0026#39;WP_DEBUG_DISPLAY\u0026#39;, false); @ini_set(\u0026#39;display_errors\u0026#39;, 0);   After the changes, you‚Äôll get a more detailed error information. Once you finished debugging or testing please remove the lines of codes and set WP_DEBUG constant to false.\nHappy Coding üòé\n","permalink":"https://www.raisachin.com.np/posts/how-to-turn-on-error-reporting-in-wordpress/","summary":"You got an error. The first thing we do is to check the error logs or reports. The logs or reports make it the developer or any tech guy easy to solve the problems.\nToday we will enable some of the hidden variables which can help us debug the WordPress errors more easily. These variables are mostly enabled only for the development process, not on production websites. Let‚Äôs get to the point now.","title":"How to Turn on Error Reporting in Wordpress"},{"content":"Short array syntax [] was introduced a while back when PHP 5.4 was released. Basically it is ability to define arrays using [] instead of array().\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026lt;?php $arr1 = array( \u0026#39;motto\u0026#39; =\u0026gt; \u0026#39;learning is fun.\u0026#39;, \u0026#39;url\u0026#39; =\u0026gt; \u0026#39;raisachin.com.np\u0026#39; ); $arr2 = [ \u0026#39;motto\u0026#39; =\u0026gt; \u0026#39;learning is fun.\u0026#39;, \u0026#39;url\u0026#39; =\u0026gt; \u0026#39;raisachin.com.np\u0026#39; ]; echo \u0026#39;\u0026lt;pre\u0026gt;\u0026#39;; print_r($arr1); echo \u0026#39;\u0026lt;/pre\u0026gt;\u0026#39;;   Using any of the above will result the same output.\nWordPress prefer array() instead of short array syntax , because it can run on PHP 5.2 , and [] was not introduced back then. Using short array syntax can breaks some sites running on wordpress.\nHappy Coding üòç\n","permalink":"https://www.raisachin.com.np/posts/why-wordpress-prefer-array-instead-of-short-array-syntax/","summary":"Short array syntax [] was introduced a while back when PHP 5.4 was released. Basically it is ability to define arrays using [] instead of array().\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026lt;?php $arr1 = array( \u0026#39;motto\u0026#39; =\u0026gt; \u0026#39;learning is fun.\u0026#39;, \u0026#39;url\u0026#39; =\u0026gt; \u0026#39;raisachin.com.np\u0026#39; ); $arr2 = [ \u0026#39;motto\u0026#39; =\u0026gt; \u0026#39;learning is fun.\u0026#39;, \u0026#39;url\u0026#39; =\u0026gt; \u0026#39;raisachin.com.np\u0026#39; ]; echo \u0026#39;\u0026lt;pre\u0026gt;\u0026#39;; print_r($arr1); echo \u0026#39;\u0026lt;/pre\u0026gt;\u0026#39;;   Using any of the above will result the same output.","title":"Why Wordpress Prefer array() Instead of Short Array Syntax"},{"content":"Hi! üëã I‚Äôm Rai Sachin, a full-stack developer focused on creating great web experiences. Programming has been my passion since the day I started coding and build the first program with computers. I enjoy coding and building new system websites.\nApart from coding, I love music and traveling. Music and Travelling have been my best side buddy. Playing guitar and singing old songs makes my mind free. Traveling to different places makes my soul fresh. Both mind and soul are needed to be free and fresh for a programmer.\nBlog writing is my hobby. I write a blog regarding changes and development in programming. Over the past 8 years, I have worked for some of the best companies and wonderful clients to create some mesmerizing work output. Those moments have encouraged me to write a blog regarding the problem I have faced and the solution I have gone through. In my blog, you can find the most satisfying article so support me and keep supporting.\nThank you for visiting my website.\nAlways at your service!\n.twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  Execute. Nothing gets done if you don\u0026#39;t launch an MVP\n\u0026mdash; Sachin Rai (@sachinkiranti) May 10, 2021 Enjoy the rest of your day! ‚úåÔ∏è\n","permalink":"https://www.raisachin.com.np/about/","summary":"Hi! üëã I‚Äôm Rai Sachin, a full-stack developer focused on creating great web experiences. Programming has been my passion since the day I started coding and build the first program with computers. I enjoy coding and building new system websites.\nApart from coding, I love music and traveling. Music and Travelling have been my best side buddy. Playing guitar and singing old songs makes my mind free. Traveling to different places makes my soul fresh.","title":"About"},{"content":"","permalink":"https://www.raisachin.com.np/posts/hello-world/","summary":"","title":"Hello World"}]